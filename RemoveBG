<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Magic Background Remover</title>
    <style>  
        :root {
            --primary: #6C63FF;
            --secondary: #FF6584;
            --dark: #2F2E41;
            --light: #F8F9FA;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', sans-serif;
        }

        body {
            background: linear-gradient(135deg, var(--light) 0%, #e6e6e6 100%);
            min-height: 100vh;
            padding: 2rem;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        h1 {
            text-align: center;
            color: var(--dark);
            margin-bottom: 2rem;
            font-size: 2.5rem;
        }

        .upload-area {
            border: 3px dashed var(--primary);
            border-radius: 15px;
            padding: 2rem;
            text-align: center;
            margin-bottom: 2rem;
            transition: 0.3s;
            background: white;
        }

        .upload-area:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }

        #imageInput {
            display: none;
        }

        .image-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-top: 2rem;
        }

        .image-box {
            background: white;
            border-radius: 15px;
            padding: 1rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            text-align: center;
        }

        .image-wrapper {
            position: relative;
            padding-top: 100%;
            background: #f4f4f4;
            border-radius: 10px;
            overflow: hidden;
        }

        img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: contain;
        }

        .color-palette {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(40px, 1fr));
            gap: 0.5rem;
            margin-top: 1rem;
        }

        .color-option {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            transition: 0.3s;
            border: 2px solid transparent;
        }

        .color-option:hover {
            transform: scale(1.1);
        }

        button {
            background: var(--primary);
            color: white;
            border: none;
            padding: 0.8rem 2rem;
            border-radius: 25px;
            cursor: pointer;
            font-size: 1rem;
            transition: 0.3s;
            margin-top: 1rem;
        }

        button:hover {
            background: var(--secondary);
            transform: translateY(-2px);
        }

        .loading {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 1.5rem;
            color: var(--dark);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>✨ Magic Background Remover</h1>
        
        <div class="upload-area" id="dropZone">
            <p>Drag & Drop your image here or</p>
            <button onclick="document.getElementById('imageInput').click()">
                Choose File
            </button>
        </div>

        <input type="file" id="imageInput" accept="image/*">

        <div class="image-container">
            <div class="image-box">
                <h3>Original Image</h3>
                <div class="image-wrapper" id="originalContainer"></div>
            </div>
            
            <div class="image-box">
                <h3>Result</h3>
                <div class="image-wrapper" id="resultContainer"></div>
                <div class="color-palette" id="colorPalette"></div>
                <button id="downloadButton" style="display: none;" onclick="downloadImage()">Download</button>
            </div>
        </div>

        <div class="loading" id="loading">Processing... ✨</div>
    </div>

    <script>
        const API_KEY = 'z46pJtPRRA2PCcD6fzQLmeyM';
        let resultUrl = '';
        
        const colors = ['#FFFFFF', '#000000', '#FF6B6B', '#4ECDC4', '#45B7D1',
            '#96CEB4', '#FFEEAD', '#FF9999', '#D4A5A5', '#6C63FF'];
        
        // Initialize color palette
        const colorPalette = document.getElementById('colorPalette');
        colors.forEach(color => {
            const div = document.createElement('div');
            div.className = 'color-option';
            div.style.backgroundColor = color;
            div.addEventListener('click', () => {
                document.getElementById('resultContainer').style.backgroundColor = color;
            });
            colorPalette.appendChild(div);
        });
        
        // Handle file selection and drag-drop
        document.getElementById('imageInput').addEventListener('change', handleFile);
        const dropZone = document.getElementById('dropZone');

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.style.borderColor = '#FF6584';
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.style.borderColor = '#6C63FF';
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            handleFile(e.dataTransfer.files);
        });

        async function handleFile(input) {
            let files;
            // Check if input is an event
            if (input instanceof Event) {
                files = input.target.files;
            } else {
                files = input;
            }
            
            const file = files[0];
            if (!file) return;

            document.getElementById('loading').style.display = 'block';

            // Display original image
            const originalContainer = document.getElementById('originalContainer');
            originalContainer.innerHTML = `<img src="${URL.createObjectURL(file)}" alt="Original">`;

            // Process image with Remove.bg API
            const formData = new FormData();
            formData.append('image_file', file);
            
            try {
                const response = await fetch('https://api.remove.bg/v1.0/removebg', {
                    method: 'POST',
                    headers: {
                        'X-Api-Key': API_KEY
                    },
                    body: formData
                });

                const blob = await response.blob();
                resultUrl = URL.createObjectURL(blob);
                
                document.getElementById('resultContainer').innerHTML = `
                    <img src="${resultUrl}" alt="Background Removed">
                `;
                document.getElementById('downloadButton').style.display = 'block';
            } catch (error) {
                alert('Error processing image. Please try again.');
                console.error(error);
            }

            document.getElementById('loading').style.display = 'none';
        }

        function downloadImage() {
            const link = document.createElement('a');
            link.href = resultUrl;
            link.download = 'background_removed.png';
            link.click();
        }
    </script>
</body>
</html>
